# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
# Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  # config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL


  ## For masterless, mount your salt file root
  # config.vm.synced_folder "salt/roots/", "/srv/salt/"

  ## Use all the defaults:
#   config.vm.provision :salt do |salt|

#     salt.masterless = true
#     salt.minion_config = "salt/minion"
#     salt.run_highstate = true
#   end

# end
MEM = 400

Vagrant.configure(2) do |config|

  config.vm.define "master", primary: true do |master|
    master.vm.provider "virtualbox" do |v|
      v.memory = 2*MEM
    end
    master.vm.network "private_network", ip: "172.16.1.254"
    master.vm.hostname = "master"
    master.vm.box = "ubuntu/wily64"
    master.vm.synced_folder "salt/roots/master", "/srv/salt/"
    master.vm.provision :salt do |salt|
      salt.install_master = true
      salt.master_config = "salt/config/master/master.cfg"
      salt.master_key = "salt/config/master/master.key"
      salt.master_pub = "salt/config/master/master.pub"
      salt.seed_master = 
        {
          "master" => "salt/config/minion/master-1.pub",
          "mesos-1" => "salt/config/minion/mesos-1.pub",
          "mesos-2" => "salt/config/minion/mesos-2.pub",
          "mesos-3" => "salt/config/minion/mesos-3.pub"
        }
      salt.minion_config = "salt/config/minion/master-minion.cfg"
      salt.minion_key = "salt/config/minion/master-1.key"
      salt.minion_pub = "salt/config/minion/master-1.pub"
    end
  end

  config.vm.define "mesos-1" do |min|
    min.vm.provider "virtualbox" do |v|
      v.memory = MEM
    end
    min.vm.network "private_network", ip: "172.16.1.11"
    min.vm.hostname = "mesos-1"
    min.vm.box = "ubuntu/wily64"
    min.vm.provision :salt do |salt|
      salt.minion_config = "salt/config/minion/mesos-minion.cfg"
      salt.minion_key = "salt/config/minion/mesos-1.key"
      salt.minion_pub = "salt/config/minion/mesos-1.pub"
    end
  end

  config.vm.define "mesos-2" do |min|
    min.vm.provider "virtualbox" do |v|
      v.memory = MEM
    end
    min.vm.network "private_network", ip: "172.16.1.12"
    min.vm.hostname = "mesos-2"
    min.vm.box = "ubuntu/wily64"
    min.vm.provision :salt do |salt|
      salt.minion_config = "salt/config/minion/mesos-minion.cfg"
      salt.minion_key = "salt/config/minion/mesos-2.key"
      salt.minion_pub = "salt/config/minion/mesos-2.pub"
    end
  end

  config.vm.define "mesos-3" do |min|
    min.vm.provider "virtualbox" do |v|
      v.memory = MEM
    end
    min.vm.network "private_network", ip: "172.16.1.13"
    min.vm.hostname = "mesos-3"
    min.vm.box = "ubuntu/wily64"
    min.vm.provision :salt do |salt|
      salt.minion_config = "salt/config/minion/mesos-minion.cfg"
      salt.minion_key = "salt/config/minion/mesos-3.key"
      salt.minion_pub = "salt/config/minion/mesos-3.pub"
    end
  end
 
end