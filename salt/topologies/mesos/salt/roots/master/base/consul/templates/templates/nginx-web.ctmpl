{{ "{{$customer_id := \"" ~ customer_id ~ "\" }}" }}
{{ "{{$customer := \"customer-" ~ customer_id ~ "\"}}" }}
{{ "{{$gateway := \"" ~ pillar['docker']['gw'] ~ "\"}}" }}
{{ "{{$domain := \"" ~ pillar['schub']['domain'] ~ "\"}}" }}
{% raw %}

{{with $customer_data := key (print "customer/" $customer_id) | parseJSON }}
  {{if $customer}}
    {{range ls "proxy/web"}}
      {{with $d := .Value | parseJSON}}
        {{if $d}}
          {{if service (print $customer "." $d.service ":" $d.containerPort)}}
            upstream web-backend-{{$customer}}-{{$d.service}}-{{$d.containerPort}} {
              {{range service (print $customer "." $d.service ":" $d.containerPort)}}
              server {{.Address}}:{{.Port}};
              {{end}}
            }
            server {
              listen {{if not $d.external}}{{$gateway}}:{{end}}{{$d.servicePort}};
              server_name {{$d.service}}.{{$customer_data.name}}.{{$domain}};

              location / {
                proxy_read_timeout      {{if $d.timeout }}{{$d.timeout}}{{ else }}10{{end}};
                proxy_pass              http://web-backend-{{$customer}}-{{$d.service}}-{{$d.containerPort}};
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Host $http_host;
              }
            }
          {{end}}
        {{end}}
      {{end}}
    {{end}}
  {{end}}
{{end}}

{% endraw %}
